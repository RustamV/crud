{"version":3,"sources":["axios/http-common.js","axios/axios-service.js","components/user/User.js","components/users/Users.js","components/usernotfound/UserNotFound.js","components/create/Create.js","components/update/Update.js","components/delete/Delete.js","components/crud/Crud.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","Content-type","axios_service","http","get","data","post","put","delete","User","_useState","useState","id","first_name","last_name","email","key","_useState2","Object","slicedToArray","user","setUser","react_default","a","createElement","className","onClick","AxiosService","then","response","console","log","concat","toConsumableArray","catch","e","table","columns","title","dataIndex","dataSource","pagination","pageSize","Users","users","setUsers","getAll","UserNotFound","getNotFound","alert","Create","name","setName","_useState3","_useState4","job","setJob","tailLayout","wrapperCol","offset","span","es_form","assign","labelCol","initialValues","remember","Item","label","rules","required","message","value","onChange","target","input","es_button","type","htmlType","createdAt","createUser","Update","update","updatedAt","Delete","TabPane","Tabs","Crud","tabs","tab","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.852734c4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://reqres.in/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"./http-common\";\r\n\r\nclass AxiosService {\r\n  getAll() {\r\n    return http.get(\"/users?page=2\");\r\n  }\r\n\r\n  get() {\r\n    return http.get(`/users/2`);\r\n  }\r\n\r\n  getNotFound() {\r\n    return http.get(`/users/23`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/users\", data);\r\n  }\r\n\r\n  update(data) {\r\n    return http.put(`/users/2`, data);\r\n  }\r\n\r\n  delete() {\r\n    return http.delete(`/users/2`);\r\n  }\r\n}\r\n\r\nexport default new AxiosService();","import React, { useState } from 'react';\r\nimport AxiosService from \"../../axios/axios-service\";\r\n\r\nimport { Table } from 'antd';\r\n\r\nexport default function User() {\r\n    const [user, setUser] = useState([{\r\n        id: '1',\r\n        first_name: 'John',\r\n        last_name: 'Brown',\r\n        email: 'johnbrown@gmail.com',\r\n        key: '1'\r\n    }]);\r\n    const getUser = () => {\r\n        AxiosService.get()\r\n            .then(response => {\r\n                console.log(response);\r\n                setUser(user => [...user, response.data.data]);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'First Name',\r\n            dataIndex: 'first_name',\r\n            key: 'first_name'\r\n        },\r\n        {\r\n            title: 'Last Name',\r\n            dataIndex: 'last_name',\r\n            key: 'last_name',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"user\">\r\n            <h2 className=\"user__title\">Get user</h2>\r\n            <button onClick={getUser}>Get data from API</button>\r\n            {\r\n                user &&\r\n                (\r\n                    <Table columns={columns} dataSource={user} pagination={{ pageSize: 3 }} />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport AxiosService from \"../../axios/axios-service\";\r\n\r\nimport { Table } from 'antd';\r\n\r\nexport default function Users() {\r\n    const [users, setUsers] = useState([{\r\n        id: '1',\r\n        first_name: 'John',\r\n        last_name: 'Brown',\r\n        email: 'johnbrown@gmail.com',\r\n        key: '1'\r\n    }]);\r\n    const getUsers = () => {\r\n        AxiosService.getAll()\r\n            .then(response => {\r\n                console.log(response);\r\n                setUsers(users => [...users, ...response.data.data]);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'First Name',\r\n            dataIndex: 'first_name',\r\n            key: 'first_name'\r\n        },\r\n        {\r\n            title: 'Last Name',\r\n            dataIndex: 'last_name',\r\n            key: 'last_name',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"user\">\r\n            <h2 className=\"user__title\">Get users</h2>\r\n            <button onClick={getUsers}>Get data from API</button>\r\n            {\r\n                users &&\r\n                (\r\n                    <Table columns={columns} dataSource={users} pagination={{ pageSize: 4 }} />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport AxiosService from \"../../axios/axios-service\";\r\n\r\nimport { Table } from 'antd';\r\n\r\nexport default function UserNotFound() {\r\n    const [user, setUser] = useState([]);\r\n    const getUser = () => {\r\n        AxiosService.getNotFound()\r\n            .then(response => {\r\n                console.log(response);\r\n                setUser(user => [...user, response.data.data]);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                alert('Error 404: user not found')\r\n            });\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'First Name',\r\n            dataIndex: 'first_name',\r\n            key: 'first_name'\r\n        },\r\n        {\r\n            title: 'Last Name',\r\n            dataIndex: 'last_name',\r\n            key: 'last_name',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"user\">\r\n            <h2 className=\"user__title\">Get user</h2>\r\n            <button onClick={getUser}>Get data from API</button>\r\n            {\r\n                user &&\r\n                (\r\n                    <Table columns={columns} dataSource={user} pagination={{ pageSize: 3 }} />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport AxiosService from \"../../axios/axios-service\";\r\n\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nexport default function Create() {\r\n    const [name, setName] = useState();\r\n    const [job, setJob] = useState();\r\n    const createUser = (name, job) => {\r\n        AxiosService.create({\r\n            \"name\": name,\r\n            \"job\": job\r\n        })\r\n            .then(response => {\r\n                console.log(response);\r\n                alert(`User created: \r\n                name: ${response.data.name}, \r\n                job: ${response.data.job}\r\n                createdAt: ${response.data.createdAt}\r\n                `);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n    return (\r\n        <div className=\"user\">\r\n            <h2 className=\"user__title\">Create user</h2>\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n            >\r\n                <Form.Item\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: 'Please input your name!' }]}\r\n                    value={name || ''}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Job\"\r\n                    name=\"job\"\r\n                    rules={[{ required: true, message: 'Please input your job!' }]}\r\n                    value={job || ''}\r\n                    onChange={(e) => setJob(e.target.value)}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={() => createUser(name, job)}>\r\n                        Create\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport AxiosService from \"../../axios/axios-service\";\r\n\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nexport default function Update() {\r\n    const [name, setName] = useState();\r\n    const [job, setJob] = useState();\r\n    const createUser = (name, job) => {\r\n        AxiosService.update({\r\n            \"name\": name,\r\n            \"job\": job\r\n        })\r\n            .then(response => {\r\n                console.log(response);\r\n                alert(`User updated: \r\n                name: ${response.data.name}, \r\n                job: ${response.data.job}\r\n                updatedAt: ${response.data.updatedAt}\r\n                `);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n    return (\r\n        <div className=\"user\">\r\n            <h2 className=\"user__title\">Update user</h2>\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n            >\r\n                <Form.Item\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: 'Please input your name!' }]}\r\n                    value={name || ''}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Job\"\r\n                    name=\"job\"\r\n                    rules={[{ required: true, message: 'Please input your job!' }]}\r\n                    value={job || ''}\r\n                    onChange={(e) => setJob(e.target.value)}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" onClick={() => createUser(name, job)}>\r\n                        Update\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport AxiosService from \"../../axios/axios-service\";\r\n\r\nexport default function Delete() {\r\n    const deleteUser = () => {\r\n        AxiosService.delete()\r\n            .then(response => {\r\n                console.log(response);\r\n                alert(`User deleted`);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"user\">\r\n            <h2 className=\"user__title\">Delete user</h2>\r\n            <button onClick={deleteUser}>Delete user</button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Tabs } from 'antd';\r\n\r\nimport User from '../user/User';\r\nimport Users from '../users/Users';\r\nimport UserNotFound from '../usernotfound/UserNotFound';\r\nimport Create from '../create/Create';\r\nimport Update from '../update/Update';\r\nimport Delete from '../delete/Delete';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function Crud() {\r\n    return (\r\n        <div className=\"crud\">\r\n            <Tabs type=\"card\" className=\"crud__tabs\">\r\n                <TabPane tab=\"User\" key=\"1\" className=\"crud__tab-panel\">\r\n                   <User />\r\n                </TabPane>\r\n                <TabPane tab=\"Users\" key=\"2\" className=\"crud__tab-panel\">\r\n                    <Users />\r\n                </TabPane>\r\n                <TabPane tab=\"User Not Found\" key=\"3\" className=\"crud__tab-panel\">\r\n                    <UserNotFound />\r\n                </TabPane>\r\n                <TabPane tab=\"Create\" key=\"4\" className=\"crud__tab-panel\">\r\n                    <Create />  \r\n                </TabPane>\r\n                <TabPane tab=\"Update\" key=\"5\" className=\"crud__tab-panel\">\r\n                    <Update />\r\n                </TabPane>\r\n                <TabPane tab=\"Delete\" key=\"6\" className=\"crud__tab-panel\">\r\n                    <Delete />\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport 'antd/dist/antd.css';\n\nimport Crud from './components/crud/Crud';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Crud />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}